<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiazhielec.order.mapper.PrintCustomerTemplateMapper">
    
    <resultMap type="PrintCustomerTemplate" id="PrintCustomerTemplateResult">
        <result property="customerId"    column="customer_id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="customerCode"      column="customer_code"     />
        <result property="templateId"    column="template_id"    />
        <result property="templateName"      column="template_name"     />
        <result property="printCustomerTemplateId"    column="print_customer_template_id"    />
    </resultMap>

    <sql id="selectPrintCustomerTemplateVo">
        select customer_id, template_id, print_customer_template_id from print_customer_template
    </sql>

    <select id="selectPrintCustomerTemplateList" parameterType="PrintCustomerTemplate" resultMap="PrintCustomerTemplateResult">
        select a.customer_id, a.template_id,a.print_customer_template_id,c.customer_name,c.customer_code,t.template_name from print_customer_template a
        left join print_customer c on a.customer_id = c.id
        left join print_template t on a.template_id = t.id
        <where>  
            <if test="customerId != null "> and a.customer_id = #{customerId}</if>
            <if test="templateId != null "> and a.template_id = #{templateId}</if>
            <if test="customerName != null and customerName != ''">
                and c.customer_name like concat('%', #{customerName}, '%')
            </if>
            <if test="customerCode != null and customerCode != ''">
                and c.customer_code like concat('%', #{customerCode}, '%')
            </if>
        </where>
    </select>
    
    <select id="selectPrintCustomerTemplateByPrintCustomerTemplateId" parameterType="Long" resultMap="PrintCustomerTemplateResult">
        <include refid="selectPrintCustomerTemplateVo"/>
        where print_customer_template_id = #{printCustomerTemplateId}
    </select>
        
    <insert id="insertPrintCustomerTemplate" parameterType="PrintCustomerTemplate" useGeneratedKeys="true" keyProperty="printCustomerTemplateId">
        insert into print_customer_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">customer_id,</if>
            <if test="templateId != null">template_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">#{customerId},</if>
            <if test="templateId != null">#{templateId},</if>
         </trim>
    </insert>

    <update id="updatePrintCustomerTemplate" parameterType="PrintCustomerTemplate">
        update print_customer_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="templateId != null">template_id = #{templateId},</if>
        </trim>
        where print_customer_template = #{printCustomerTemplateId}
    </update>

    <delete id="deletePrintCustomerTemplateByPrintCustomerTemplateId" parameterType="Long">
        delete from print_customer_template where print_customer_template_id = #{printCustomerTemplateId}
    </delete>

    <delete id="deletePrintCustomerTemplateByPrintCustomerTemplateIds" parameterType="String">
        delete from print_customer_template where print_customer_template_id in
        <foreach item="printCustomerTemplateId" collection="array" open="(" separator="," close=")">
            #{printCustomerTemplateId}
        </foreach>
    </delete>

    <select id="checkPrintCustomerTemplateCustomerIdUnique"  parameterType="PrintCustomerTemplate" resultMap="PrintCustomerTemplateResult">
        select top(1) customer_id, template_id, print_customer_template_id from print_customer_template
        where template_id=#{templateId} and customer_id = #{customerId}
    </select>


</mapper>